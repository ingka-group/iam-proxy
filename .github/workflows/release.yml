name: ðŸ”– Release

on:
  push:
    branches:
      - main

jobs:
  release:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Check out source code
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0

      - name: Get latest tag
        uses: WyriHaximus/github-action-get-previous-tag@v1.4.0
        id: previous_version
        with:
          prefix: v

      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.67.0
        id: bump_version
        env:
          GITHUB_TOKEN: ${{ github.token }}
          WITH_V: true
          RELEASE_BRANCHES: main
          # custom tagging policy adapted to conventional commits
          MAJOR_STRING_TOKEN: feat!
          MINOR_STRING_TOKEN: feat
          DEFAULT_BUMP: patch

      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version: 1.21

      - name: Install JFrog CLI
        uses: jfrog/setup-jfrog-cli@v4

      - name: Build binary and push to JFrog
        run: |
          BUILD_NAME=${{ github.repository }}
          
          # make compile will use this VERSION in the go-install command
          export VERSION=${{ steps.bump_version.outputs.new_tag }}
          
          # Configure Artifactory:
          jf c add --url=${{ secrets.JF_URL }} --access-token=${{ secrets.JF_ACCESS_TOKEN }}
        
          # Configure the project's repositories:
          jf go-config --repo-resolve=${{ secrets.JF_GO_RELEASE_REPO }} --repo-deploy=${{ secrets.JF_GO_RELEASE_REPO }}
          
          # Build the project with go and resolve the project dependencies from Artifactory.
          # The `go build` command is copied from `make compile`
          jf go build -ldflags "-X $(go list -m)/internal/version.Version=${VERSION}" ./... --build-name=$BUILD_NAME --build-number=$VERSION
          
          # Publish the package to the <GO_DEPLOY_REPO> repository in Artifactory.
          jf go-publish --build-name=$BUILD_NAME --build-number=$VERSION $VERSION

      - name: Build changelog
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@v4.1.1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          fromTag: ${{ steps.previous_version.outputs.tag }}
          toTag: ${{ steps.bump_version.outputs.new_tag }}
          configurationJson: |
            {
              "sort": "DESC",
              "template": "## Whatâ€™s Changed\n\n#{{UNCATEGORIZED}}",
              "pr_template": "* #{{TITLE}} (##{{NUMBER}})",
              "empty_template": "no changes"
            }

      - name: Verify changelog
        shell: bash
        run: |
          if [[ '${{ steps.build_changelog.outputs.failed }}' == 'true' ]]; then
            echo 'Error during building the changelog'
            exit 1
          fi

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          prerelease: false
          draft: false
          name: "Release ${{ steps.bump_version.outputs.new_tag }}"
          tag_name: ${{ steps.bump_version.outputs.new_tag }}
          body: ${{ steps.build_changelog.outputs.changelog }}
          token: ${{ github.token }}
